version: "3.8"
services:
  mongodb1:
    image: mongo:4.2
    container_name: mongodb1
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27014"
      ]
    restart: always
    ports:
      - 27014:27014
    environment:
      MONGO_INITDB_ROOT_USERNAME: null
      MONGO_INITDB_ROOT_PASSWORD: null
      MONGO_INITDB_DATABASE: crm
    healthcheck:
      test: test $$(echo
        "rs.initiate({_id:'rs0',members:[{_id:0,host:\"${IP_ADDRESS}:27014\"},{_id:1,host:\"${IP_ADDRESS}:27015\"},{_id:2,host:\"${IP_ADDRESS}:27016\"}]}).ok
        || rs.status().ok" | mongo --port 27014 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    volumes:
      - ./data/mongo:/data/db
  mongodb2:
    image: mongo:4.2
    restart: always
    container_name: mongodb2
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27015"
      ]
    ports:
      - 27015:27015
  mongodb3:
    image: mongo:4.2
    restart: always
    container_name: mongodb3
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27016"
      ]
    ports:
      - 27016:27016
  mongodb-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    depends_on:
      - mongodb1
    environment:
      environment: null
      ME_CONFIG_MONGODB_URL: mongodb://${IP_ADDRESS}:27014/crm?replicaSet=rs0

#     # va:
#     #     container_name: va-app
#     #     image: va-app
#     #     restart: always
#     #     build: .
#     #     ports:
#     #         - "7500:8001"
#     #     depends_on:
#     #         - mongodb1
